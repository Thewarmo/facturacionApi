# ===== CONFIGURACIÓN BÁSICA =====
spring.application.name=sistema-facturacion
server.port=${PORT:8080}

# ===== OPTIMIZACIONES DE STARTUP =====
# GRAN IMPACTO: Inicialización lazy de beans
spring.main.lazy-initialization=true
# Desactiva JMX en producción (no necesario)
spring.jmx.enabled=false
# Evita pre-inicialización en background
spring.backgroundpreinitializer.ignore=true

# ===== DATABASE CONFIG (OPTIMIZADO) =====
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Pool de conexiones HikariCP optimizado para startup rápido
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.initialization-fail-timeout=-1

# ===== JPA OPTIMIZADO =====
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# CAMBIO: validate es más rápido que update en producción
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
# PRODUCCIÓN: Desactiva SQL logging para mejor rendimiento
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.default_schema=facturacion
# Optimizaciones de Hibernate
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.check_nullability=false

# ===== JWT (MANTENER IGUAL) =====
jwt.secret=${JWT_SECRET}
jwt.expiration=86400

# ===== AWS S3 OPTIMIZADO =====
spring.cloud.aws.region.static=${AWS_REGION}
spring.cloud.aws.credentials.access-key=${AWS_ACCESS_KEY_ID}
spring.cloud.aws.credentials.secret-key=${AWS_SECRET_ACCESS_KEY}
spring.cloud.aws.s3.bucket=${AWS_S3_BUCKET}
spring.cloud.aws.stack.auto=false
# Optimización: Usa las credenciales por defecto cuando sea posible
spring.cloud.aws.credentials.use-default-aws-credentials-chain=true

# ===== MULTIPART CONFIG =====
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB
spring.servlet.multipart.file-size-threshold=0
spring.servlet.multipart.resolve-lazily=false

# ===== LOGGING OPTIMIZADO =====
# Nivel general: Solo warnings y errores
logging.level.root=WARN
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.level.com.amazonaws=WARN
logging.level.software.amazon.awssdk=WARN
# Tu aplicación en INFO para debugging necesario
logging.level.com.facturacion.sistemafacturacion=INFO

# Para debugging específico (descomenta si necesitas debug)
# logging.level.org.springframework.web.multipart=DEBUG
# logging.level.org.springframework.web.servlet.mvc.method.annotation=DEBUG
# logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG

# Patrón de log más eficiente
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# ===== TOMCAT OPTIMIZADO =====
server.tomcat.connection-timeout=20000
server.tomcat.keep-alive-timeout=20000
server.tomcat.max-swallow-size=5MB
server.tomcat.max-http-form-post-size=5MB
server.tomcat.max-http-header-size=8KB
# Optimización: Configuración de threads
server.tomcat.threads.min-spare=1
server.tomcat.threads.max=50

# ===== SPRING MVC OPTIMIZADO =====
spring.mvc.async.request-timeout=30000
# Compresión para respuestas más rápidas
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,application/json,application/javascript
server.compression.min-response-size=1024

# ===== ACTUATOR OPTIMIZADO (SOLO ESENCIALES) =====
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=never
# Desactiva métricas innecesarias en startup
management.metrics.export.defaults.enabled=false

# ===== SWAGGER (MANTENER) =====
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true

# ===== CONFIGURACIÓN POR PERFILES =====
# Variables para diferentes entornos
# Desarrollo (usa estas variables de entorno)
# SHOW_SQL=true
# JPA_DDL_AUTO=update
# LOGGING_LEVEL=DEBUG

# Producción (valores por defecto optimizados)
# SHOW_SQL=false
# JPA_DDL_AUTO=validate
# LOGGING_LEVEL=WARN